@{
    ViewBag.Title = "Home";
}

<div class="row py-4">
    <div class="mx-auto">
        <img src="~/Content/Images/aab-logo.png" />
    </div>
</div>

<div class="row py-3">
    <span class="col-1 offset-4 col-form-label px-0">NEW PROJECT</span>
    <div class="col-2">
        <p>@Html.RoleBasedActionLink("Create", ProjectsControllerAction.Create, ControllerName.Projects, null, "btn btn-primary btn-block")</p>
    </div>
</div>

<div class="row py-3">
    <span class="col-1 offset-4 col-form-label px-0">FIND PROJECT</span>
    <div class="col-4">
        <input class="form-control" id="project-search" type="text" placeholder="NAME / PMC ID" autocomplete="off">
    </div>
</div>

<div class="row py-4">
    <div class="col-2 offset-5">
        <label class="pb-1">REPORTS</label>
        <div class="pb-2">
            @Html.RouteLink("Boarding", routeName: ReportsControllerRoute.ViewReport, routeValues: new
            {
                name = ReportName.Boarding
            })
        </div>
        <div class="pb-2">
            @Html.RouteLink("Completed & Hold", routeName: ReportsControllerRoute.ViewReport, routeValues: new
            {
                name = ReportName.CompletedAndHold
            })
        </div>
        <div class="pb-2">
            @Html.RouteLink("Software Transition", routeName: ReportsControllerRoute.ViewReport, routeValues: new
            {
                name = ReportName.SoftwareTransition
            })
        </div>
        <div class="pb-2">
            @Html.RouteLink("CMC by ID", routeName: ReportsControllerRoute.ViewReport, routeValues: new
            {
                name = ReportName.CmcById
            })
        </div>
        <div class="pb-2">
            @Html.RouteLink("CMC by Name", routeName: ReportsControllerRoute.ViewReport, routeValues: new
            {
                name = ReportName.CmcByName
            })
        </div>
        <div class="pb-2">
            @Html.RouteLink("CD Emails", routeName: ReportsControllerRoute.ViewReport, routeValues: new
            {
                name = ReportName.CDEmails
            })
        </div>
        <div class="pb-2">
            @Html.RouteLink("Coupon", routeName: ReportsControllerRoute.ViewReport, routeValues: new
            {
                name = ReportName.Coupon
            })
        </div>
    </div>
    <div class="col-2">
        <label class="pb-1">EXPORTS</label>
        <div class="pb-2">
            @Html.RouteLink("CMC List", routeName: ExportsControllerRoute.GenerateExportFile, routeValues: new
            {
                name = ExportName.CmcList
            })
        </div>
        <div class="pb-2">
            @Html.RouteLink("CMC Useful Info List", routeName: ExportsControllerRoute.GenerateExportFile, routeValues: new
            {
                name = ExportName.CmcUsefulInfoList
            })
        </div>
        <div class="pb-2">
            <a href="#">All info</a>
        </div>
    </div>
</div>

<div class="row" style="position: relative; top: 10px;">
    <div class="col-5 offset-4 border-top border-primary px-0 pt-2">
        <span class="text-muted" style="line-height: 1.2; font-size: 10px; display: block;">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean euismod bibendum laoreet. Proin gravida dolor sit amet lacus accumsan et viverra justo commodo. Proin sodales pulvinar sic tempor. Sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.</span>
    </div>
</div>

@*@section scripts
{
    @Scripts.Render("~/bundles/jqueryui")

    <script>
        $(document).ready(function () {

            // Projects search autocomplete
            $("#project-search").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/api/Projects",
                        method: "GET",
                        dataType: "json",
                        data: {
                            search: request.term
                        },
                        success: function (data) {
                            if (data.length > 0) {
                                response($.map(data, function (item) {
                                    return {
                                        label: item.name,
                                        value: item.id
                                    };
                                }));
                            } else {
                                response([{
                                    label: 'No results found',
                                    value: -1
                                }]);
                            }
                        },
                        error: function () {
                            handleAjaxError();
                            response([]);
                        }
                    });
                },
                minLength: 1,
                focus: function (event, ui) {
                    event.preventDefault();
                    //this.value = ui.item.label;
                },
                select: function (event, ui) {
                    event.preventDefault();

                    if (ui.item.value === -1) {
                        $(this).val("");
                    } else {
                        this.value = ui.item.label;
                        location.href = "/Projects/Edit/" + ui.item.value;
                    }
                }
            });

            // Redirect to Search Results page on Enter keypress
            $("#project-search").on("keypress", function (event) {
                if (event.which === 13 && this.value.length > 0) {
                    event.preventDefault();
                    location.href = "/Search/Results?term=" + this.value;
                }
            });
        });

        function handleAjaxError() {
            alert("An error occurred while processing your request");
        };

    </script>
}*@