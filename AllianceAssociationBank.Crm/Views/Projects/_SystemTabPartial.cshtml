@model ProjectFormViewModel

<div class="tab-body-content">

    <div class="row">

        @* First column beginning *@
        <div class="col-4">

            <div class="form-fieldset">
                <div class="row">
                    <label class="col form-label-heading">Digital Insight</label>
                </div>
                <div class="row field-group">
                    @Html.LabelFor(m => m.DICompanyIDReadOnly, new { @class = "col-4 label-indented" })
                    <div class="col-8">
                        <span class="display-field">
                            @Html.DisplayFor(m => m.DICompanyIDReadOnly)
                        </span>
                    </div>
                </div>
                <div class="row">
                    @Html.LabelFor(m => m.InstitutionReadOnly, new { @class = "col-4 label-indented" })
                    <div class="col-8">
                        <span class="display-field">
                            @Html.DisplayFor(m => m.InstitutionReadOnly)
                        </span>
                    </div>
                </div>
            </div>
            <div class="form-fieldset">
                <div class="row">
                    <div class="col-1 check-indented">
                        @Html.DisplayFor(m => m.OnlineBankingSetupReadOnly)
                    </div>
                    @Html.LabelFor(m => m.OnlineBankingSetupReadOnly, new { @class = "check-label" })
                </div>
                <div class="row">
                    <div class="col-1 check-indented">
                        @Html.DisplayFor(m => m.OnlineBankingTrainedReadOnly)
                    </div>
                    @Html.LabelFor(m => m.OnlineBankingTrainedReadOnly, new { @class = "check-label" })
                </div>
                <div class="row">
                    <div class="col-1 check-indented">
                        @Html.RoleBasedCheckBoxFor(m => m.ACHPassThru)
                    </div>
                    @Html.LabelFor(m => m.ACHPassThru, new { @class = "check-label" })
                </div>
                <div class="row">
                    <div class="col-1 check-indented">
                        @Html.RoleBasedCheckBoxFor(m => m.ACHBatches)
                    </div>
                    @Html.LabelFor(m => m.ACHBatches, new { @class = "check-label" })
                </div>
                <div class="row">
                    <div class="col-1 check-indented">
                        @Html.DisplayFor(m => m.WireTransferTemplatesReadOnly)
                    </div>
                    @Html.LabelFor(m => m.WireTransferTemplatesReadOnly, new { @class = "check-label" })
                </div>
            </div>

        </div>
        @* First column end *@

        @* Second column beginning *@
        <div class="col-4">

            <div class="form-fieldset">
                <div class="row">
                    <label class="col form-label-heading">SFTP</label>
                </div>
                <div class="row field-group">
                    @Html.LabelFor(m => m.SftpFolderNameReadOnly, new { @class = "col-4 label-indented" })
                    <div class="col-8">
                        <span class="display-field">
                            @Html.DisplayFor(m => m.SftpFolderNameReadOnly)
                        </span>
                    </div>
                </div>
                <div class="row field-group">
                    @Html.LabelFor(m => m.SftpGeneralUserPasswordReadOnly, new { @class = "col-4 label-indented" })
                    <div class="col-8">
                        <span class="display-field">
                            @Html.DisplayFor(m => m.SftpGeneralUserPasswordReadOnly)
                        </span>
                    </div>
                </div>
                <div class="row">
                    <div>
                        @Html.LabelFor(m => m.SftpUsage, new { @class = "col label-indented" })
                    </div>
                    <div class="col-11 pl-4">
                        @Html.RoleBasedTextAreaFor(m => m.SftpUsage, 3, 10, cssClass: "form-textarea textarea-size-xsm")
                        @Html.ValidationMessageFor(m => m.SftpUsage, "", new { @class = "form-val-error-tooltip" })
                    </div>
                </div>
            </div>

            <div class="form-fieldset">
                <div class="row">
                    <label class="col form-label-heading">Validation File</label>
                </div>
                <div class="row">
                    <div class="col-1 check-indented">
                        @Html.DisplayFor(m => m.ValidationFileReceivedReadOnly)
                    </div>
                    @Html.LabelFor(m => m.ValidationFileReceivedReadOnly, new { @class = "check-label" })
                </div>
                <div class="row">
                    <div class="col-1 check-indented">
                        @Html.DisplayFor(m => m.ValidationFileAutomaticRegularReadOnly)
                    </div>
                    @Html.LabelFor(m => m.ValidationFileAutomaticRegularReadOnly, new { @class = "check-label" })
                </div>
                <div class="row">
                    <div class="col-1 check-indented">
                        @Html.DisplayFor(m => m.ValidationFileBulkImporterUsedReadOnly)
                    </div>
                    @Html.LabelFor(m => m.ValidationFileBulkImporterUsedReadOnly, new { @class = "check-label" })
                </div>
            </div>

        </div>
        @* Second column end *@

        @* Third column beginning *@
        <div class="col-4">

            <div class="form-fieldset">
                <div class="row">
                    @Html.LabelFor(m => m.BalancedReadOnly, new { @class = "col-10" })
                    <div class="col-8 offset-1">
                        <div class="form-check">
                            @Html.RadioButtonFor(m => m.BalancedReadOnly, true, htmlAttributes: new { @class = "form-check-input", disabled = "disabled" })
                            <label class="form-check-label">Balanced</label>
                        </div>
                        <div class="form-check">
                            @Html.RadioButtonFor(m => m.BalancedReadOnly, false, htmlAttributes: new { @class = "form-check-input", disabled = "disabled" })
                            <label class="form-check-label">Unbalanced</label>
                        </div>
                    </div>
                </div>
            </div>

        </div>
        @* Third column end *@

    </div>

</div>
